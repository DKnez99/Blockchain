extends layout

block layout-content
    div.container-fluid
        h1.text-center.mt-3.mb-3 COINBASE AND TX TRACKING
        div.row.row-horizon(style='flex-wrap: nowrap')
            - var blocks = []
            - blocks.push({chain: 1, block: 1, magic: 74567, blockid: 1, coinvalue: '20.00', cointo: 'Mark', txs: [], prev: '0000000000000000000000000000000000000000000000000000000000000000'})
            - blocks.push({chain: 1, block: 2, magic: 74567, blockid: 2, coinvalue: '20.00', cointo: 'Sophia', txs: [{value: '4.55', from: 'Mark', to: 'Nichole', ref: '1', returnedValue: '15.45'}], prev: '702ffc05b6d4bef3b0f63b129954ead150be1f4b8307319c46018c7726411c2a'})
            - blocks.push({chain: 1, block: 3, magic: 74567, blockid: 3, coinvalue: '20.00', cointo: 'George', txs: [{value: '2.50', from: 'Sophia', to: 'Nichole', ref: '2', returnedValue: '17.50'}, {value: '3.00', from: 'Mark', to: 'Nichole', ref: '2', returnedValue: '12.45'}], prev: 'e6725968282b7d98dd8e8cd10ff8ea2b76bb9a405f5405f24c4b6a6ed407dbbe'})
            - blocks.push({chain: 1, block: 4, magic: 74567, blockid: 4, coinvalue: '20.00', cointo: 'Mark', txs: [{value: '4.90', from: 'Nichole', to: 'Sophia', ref: '2 3', returnedValue: '5.15'}, {value: '4.09', from: 'Sophia', to: 'Andrei', ref: '3', returnedValue: '13.41'}], prev: '3b565fdb494a34b274389fe62a2cb4231493b1b4e3c81f6b2542c8b1318e4640'})
            - blocks.push({chain: 1, block: 5, magic: 74567, blockid: 5, coinvalue: '20.00', cointo: 'George', txs: [{value: '1.00', from: 'George', to: 'Mark', ref: '3', returnedValue: '19.00'}, {value: '4.00', from: 'Andrei', to: 'Mark', ref: '4', returnedValue: '0.09'}], prev: '0cc4d3d39da93950f20e55502d2e9e973d957d8d6fb66c1f9a52b320fe892023'})
            - blocks.push({chain: 1, block: 6, magic: 74567, blockid: 6, coinvalue: '10.00', cointo: 'Mark', txs: [{value: '14.50', from: 'Mark', to: 'Sophia', ref: '4 5', returnedValue: '10.50'}], prev: 'ff2be9403be9a7fd9d9d6f7e2a0d27add8335d1eaec5052b92e1f1da09ff76c7'})
            each coinbaseblock in blocks
                div.col-lg-6
                    include includes/coinbaseblock

    script.
        function getText(chain, block){
            var text =  $('#chain'+chain+'block'+block+'magic').val()+
                        $('#chain'+chain+'block'+block+'blockid').val()+
                        $('#chain'+chain+'block'+block+'coinvalue').val()+
                        $('#chain'+chain+'block'+block+'cointo').val();
            
            for(var i = 0; $('#chain'+chain+'block'+block+'tx'+i+'value').length>0; i++){
                text += $('#chain'+chain+'block'+block+'tx'+i+'ref').val()+
                        $('#chain'+chain+'block'+block+'tx'+i+'value').val()+
                        $('#chain'+chain+'block'+block+'tx'+i+'from').val()+
                        $('#chain'+chain+'block'+block+'tx'+i+'to').val()+
                        $('#chain'+chain+'block'+block+'tx'+i+'returnedValue').val()+
                        $('#chain'+chain+'block'+block+'tx'+i+'returnedFrom').val()+
                        $('#chain'+chain+'block'+block+'tx'+i+'returnedTo').val();
            }

            text += $('#chain'+chain+'block'+block+'prev').val();

            return text;
        }

        function setup(chain, block){
            updateHash(chain, block);

            //magic
            $('#chain'+chain+'block'+block+'magic').bind('input propertychange', function() {
                    this.value = this.value.replace(/[^0-9]/g, '');
                    updateBlockhain(chain, block, #{blocks.length});
                });

            $('#chain'+chain+'block'+block+'magic').bind('focusout', function() {
                if(this.value==''){
                    this.value='0';
                    updateCoinbaseBlockchain(chain, block, #{blocks.length});
                }          
            });

            //blockid
            $('#chain'+chain+'block'+block+'blockid').bind('input propertychange', function() {
                    this.value = this.value.replace(/[^0-9]/g, '');
                    updateCoinbaseBlockchain(chain, block, #{blocks.length});
                });

            $('#chain'+chain+'block'+block+'blockid').bind('focusout', function() {
                if(this.value==''){
                    this.value='0';
                    updateCoinbaseBlockchain(chain, block, #{blocks.length});
                }          
            });

            //coinbase
            $('#chain'+chain+'block'+block+'coinvalue').bind('input propertychange', function() {
                    this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');
                    updateCoinbaseBlockchain(chain, block, #{blocks.length});
                });

            $('#chain'+chain+'block'+block+'coinvalue').bind('focusout', function() {
                if(this.value==''){
                    this.value='0';
                    updateCoinbaseBlockchain(chain, block, #{blocks.length});
                }          
            });
            
            $('#chain'+chain+'block'+block+'cointo').bind('input propertychange', function() {
                    updateCoinbaseBlockchain(chain, block, #{blocks.length});
                });

            //txs
            for(var i = 0; $('#chain'+chain+'block'+block+'tx'+i+'value').length>0; i++){
                //tx ref
                $('#chain'+chain+'block'+block+'tx'+i+'ref').bind('input propertychange', function() {
                    this.value = this.value.replace(/[^0-9 ]/g, '').replace(/ +/g,' ').replace(/^ /g, '');
                    updateCoinbaseBlockchain(chain, block, #{blocks.length});
                });

                $('#chain'+chain+'block'+block+'tx'+i+'ref').bind('focusout', function() {
                    this.value = this.value.replace(/ $/g, '');
                    updateCoinbaseBlockchain(chain, block, #{blocks.length});
                });

                //tx value
                $('#chain'+chain+'block'+block+'tx'+i+'value').bind('input propertychange', function() {
                        this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');
                        updateCoinbaseBlockchain(chain, block, #{blocks.length});
                    });

                $('#chain'+chain+'block'+block+'tx'+i+'value').bind('focusout', function() {
                        if(this.value==''){
                            this.value='0';
                            updateCoinbaseBlockchain(chain, block, #{blocks.length});
                        }
                    });
                
                //tx from
                $('#chain'+chain+'block'+block+'tx'+i+'from').bind('input propertychange', function() { updateCoinbaseBlockchain(chain, block, #{blocks.length}); });

                //tx to
                $('#chain'+chain+'block'+block+'tx'+i+'to').bind('input propertychange', function() { updateCoinbaseBlockchain(chain, block, #{blocks.length}); });

                //tx returned value
                $('#chain'+chain+'block'+block+'tx'+i+'returnedValue').bind('input propertychange', function() {
                        this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');
                        updateCoinbaseBlockchain(chain, block, #{blocks.length});
                    });

                $('#chain'+chain+'block'+block+'tx'+i+'returnedValue').bind('focusout', function() {
                        if(this.value==''){
                            this.value='0';
                            updateCoinbaseBlockchain(chain, block, #{blocks.length});
                        }
                    });

                //tx returned from
                $('#chain'+chain+'block'+block+'tx'+i+'returnedFrom').bind('input propertychange', function() { updateCoinbaseBlockchain(chain, block, #{blocks.length}); });

                //tx returned to
                $('#chain'+chain+'block'+block+'tx'+i+'returnedTo').bind('input propertychange', function() { updateCoinbaseBlockchain(chain, block, #{blocks.length}); });
            }

            //prev
            $('#chain'+chain+'block'+block+'prev').bind('input propertychange', function() { updateCoinbaseBlockchain(chain, block, #{blocks.length}); });
        }

        $(function(){
            for(var i = 1; i <= #{blocks.length}; i++){
                setup(1,i);
            }
        });
        //UBACITI OBJASNJENJE KAKO RADE STVARI: SVAKI PETI COINBASE SE SMANJUJE ZA POLA, PRATE SE UNAZAD BLOKOVI ZA VALIDNE TX KROZ REFERENCE